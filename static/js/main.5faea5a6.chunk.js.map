{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","isReset","ALPHABET","LENGTH","reorderedGoods","goods","visibleGoods","sort","firstGood","secondGood","localeCompare","length","reverse","console","log","getReorderedGoods","map","good","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EACJL,GACGG,IAAaP,EAASU,UACtBH,IAAaP,EAASW,OAErBC,EArCD,SACLC,EADK,GAGJ,IADCN,EACF,EADEA,SAAUH,EACZ,EADYA,WAENU,EAAY,YAAOD,GAsBzB,OApBAC,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQV,GACN,KAAMP,EAASU,SACb,OAAOM,EAAUE,cAAcD,GAEjC,KAAMjB,EAASW,OACb,OAAOK,EAAUG,OAASF,EAAWE,OAEvC,QACE,OAAO,MAITf,GACFU,EAAaM,UAIfC,QAAQC,IAAIf,EAAUH,GAEfU,EAWgBS,CACrBtB,EAAiB,CAAEM,WAAUH,eAE5BoB,KAAI,SAAAC,GAAI,OACP,oBACE,UAAQ,OADV,SAIGA,GAFIA,MAMX,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBnB,IAAaP,EAASU,SAAW,GAAK,YACnEkB,QAAS,kBAAMpB,EAAYR,EAASU,WAHtC,iCAQA,wBACEiB,KAAK,SACLD,UAAS,yBAAoBnB,IAAaP,EAASW,OAAS,GAAK,YACjEiB,QAAS,kBAAMpB,EAAYR,EAASW,SAHtC,4BAQA,wBACEgB,KAAK,SACLD,UAAS,yBAAoBtB,EAAa,GAAK,YAC/CwB,QAAS,kBAAMvB,GAAeD,IAHhC,qBASGK,GAEG,wBACEkB,KAAK,SACLD,UAAU,4BACVE,QACE,WACEpB,EAAYR,EAASM,MACrBD,GAAc,IANpB,sBAiBR,6BACE,6BACGO,UC3HXiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5faea5a6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((firstGood, secondGood) => {\n    switch (sortType) {\n      case (SortType.ALPHABET):\n        return firstGood.localeCompare(secondGood);\n\n      case (SortType.LENGTH):\n        return firstGood.length - secondGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const isReset = (\n    isReversed\n    || sortType === SortType.ALPHABET\n    || sortType === SortType.LENGTH\n  );\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer, { sortType, isReversed },\n  )\n    .map(good => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ));\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType === SortType.LENGTH ? '' : 'is-light'}`}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-info ${isReversed ? '' : 'is-light'}`}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {\n          (isReset)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={\n                  () => {\n                    setSortType(SortType.NONE);\n                    setIsReversed(false);\n                  }\n                }\n              >\n                Reset\n              </button>\n            )\n        }\n\n      </div>\n\n      <ul>\n        <ul>\n          {reorderedGoods}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}